id: aiAgentExecute1
type: datasource
subtype: JavascriptQuery
resourceName: RetoolAIAgentExecuteQuery
template:
  queryRefreshTime: ''
  allowedGroupIds: []
  streamResponse: false
  lastReceivedFromResourceAt: null
  isFunction: false
  functionParameters: null
  queryDisabledMessage: ''
  servedFromCache: false
  offlineUserQueryInputs: ''
  functionDescription: null
  successMessage: ''
  queryDisabled: ''
  instructions: >-
    You are a helpful assistant chatting with {{ current_user.firstName }} {{
    current_user.lastName }}. Their email is {{ current_user.email }}, and the
    date is {{ new Date() }}.
  playgroundQuerySaveId: latest
  workflowParams: null
  resourceNameOverride: ''
  runWhenModelUpdates: false
  workflowRunExecutionType: sync
  showFailureToaster: true
  query: ''
  playgroundQueryUuid: ''
  playgroundQueryId: null
  error: null
  workflowRunBodyType: raw
  privateParams: []
  model: gpt-4.1
  queryRunOnSelectorUpdate: false
  runWhenPageLoadsDelay: ''
  data: null
  providerId: retoolAIBuiltIn::openAI
  importedQueryInputs: {}
  _additionalScope: []
  isImported: false
  showSuccessToaster: true
  cacheKeyTtl: ''
  requestSentTimestamp: null
  metadata: null
  queryRunTime: null
  changesetObject: ''
  offlineOptimisticResponse: null
  errorTransformer: return data.error
  finished: null
  confirmationMessage: null
  isFetching: false
  changeset: ''
  drafts:
    array: []
  rawData: null
  queryTriggerDelay: '0'
  resourceTypeOverride: null
  watchedParams: []
  temperature: 0.3
  enableErrorTransformer: false
  showLatestVersionUpdatedWarning: false
  timestamp: 0
  mcpServers:
    array: []
  importedQueryDefaults: {}
  enableTransformer: false
  showUpdateSetValueDynamicallyToggle: true
  overrideOrgCacheForUserCache: false
  runWhenPageLoads: false
  transformer: return data
  events: []
  queryTimeout: '10000'
  workflowId: null
  maxIterations: 10
  requireConfirmation: false
  queryFailureConditions: ''
  tools:
    - draft: null
      approvalRequired: false
      params:
        - name: language
          description: The language to execute. Must be 'js' or 'python'.
          type: enum
          required: true
          allowedValues:
            - js
            - python
        - name: script
          description: The code to execute, provided as a string.
          type: string
          required: true
      handler:
        type: function
        functionId: 65e1ab3f-4a5f-4f50-ba05-e7075b34b14f
      name: Execute Code
      metadata:
        type: predefined
        iconName: ToolCode
        iconColor: gray
        predefinedToolDefinitionId: executeCode:1
        schemaId: executeCode
        schemaVersion: 1
        summary: Execute a JavaScript or Python script
      handlerTimeout: 10000
      id: 4386870e-90b0-4d83-9877-0406950fd2d9
      description: >-
        Execute an arbitrary JavaScript or Python script. Cannot include custom
        libraries.


        The script must return a value that can be passed back as output. For
        JavaScript, the code must include a return statement as the final
        expression. For Python, the code must assign the intended output to a
        variable named result. Only the value of result will be returned. If the
        script does not follow these rules, the result may be undefined or null.


        Examples:


        JavaScript: return [1, 2, 3].map(x => x * 2);

        Python: result = [x * 2 for x in [1, 2, 3]]
  changesetIsObject: false
  providerName: openAI
  enableCaching: false
  allowedGroups: []
  offlineQueryType: None
  queryThrottleTime: '750'
  updateSetValueDynamically: false
  notificationDuration: ''
createdAt: 2025-09-22T02:22:56.504Z
blockData:
  top: 48
  left: 480
  uuid: 941dce9a-25fd-49b0-88fc-ca4bd76b860a
  pluginId: aiAgentExecute1
  blockType: aiAgentExecute
  editorType: JavascriptQuery
  isMinimized: false
  resourceName: RetoolAIAgentExecuteQuery
  incomingPorts: []
  incomingOnSuccessEdges:
    - b3bf4995-4f71-47e0-a24f-31f086c8af40
